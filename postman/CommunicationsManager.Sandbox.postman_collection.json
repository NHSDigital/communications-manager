{
	"info": {
		"_postman_id": "ec078d1e-d4d7-4460-92b9-7d79d51f967a",
		"name": "Communications Manager - Sandbox",
		"description": "This collection allows you to run a number of pre-generated requests to simulate responses from our sandbox environment.\n\nThis environment requires no authentication and no upfront setup for you to use.\n\nFor more information on the Communications Manager API please refer to [the documentation](https://digital.nhs.uk/developer/api-catalogue/communications-manager).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28715873",
		"_collection_link": "https://www.postman.com/nhs-communications-manager/3664098f-4f8b-4edf-874d-ed33e1eea8ed/collection/gysz9p2/communications-manager-sandbox?action=share&source=collection_link&creator=28715873"
	},
	"item": [
		{
			"name": "Send Message Batches",
			"item": [
				{
					"name": "Validation Errors",
					"item": [
						{
							"name": "400 -  Too Few Items",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This responses sends 0 message objects in the messages collection triggering the too few items error."
							},
							"response": []
						},
						{
							"name": "400 - Duplicate Items",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    },\r\n                                        {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request sends two message objects with the same `messageReference` value. This triggers a duplicate items error."
							},
							"response": []
						},
						{
							"name": "400 - Null Value",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": null,\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": null,\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request sends a null `type` and a null `recipient` on the request, triggering the null value error."
							},
							"response": []
						},
						{
							"name": "400 - Invalid Value",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"invalid\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"invalid\",\r\n                \"messageBatchReference\": \"invalid\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"invalid\",\r\n                        \"recipient\": \"invalid\",\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request sends several invalid values on properties. Each of these triggers its own invalid value error."
							},
							"response": []
						},
						{
							"name": "400 - Missing Property",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request misses the `type` and the `messageBatchReference` properties. This triggers the missing property error."
							},
							"response": []
						},
						{
							"name": "400 - Invalid Value - Body",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "}{@SA}{}SAD"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request sends through an invalid JSON body payload, which triggers the invalid value error at the body level."
							},
							"response": []
						},
						{
							"name": "404 - Invalid Routing Plan Id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 404\", () => {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"c118b13c-f98c-4def-93f0-515d4e4f4ee1\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request sends an invalid routing plan id. As the system cannot find this routing plan it triggers a 404 error."
							},
							"response": []
						}
					],
					"description": "This folder contains example requests that trigger validation errors when attempting to send a batch of messages."
				},
				{
					"name": "201 - Message Batch Created",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correlation identifier is returned\", () => {\r",
									"    pm.response.to.have.header(\"x-correlation-id\");\r",
									"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "default"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"type": "default"
							},
							{
								"key": "X-Correlation-Id",
								"value": "{{correlation_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/message-batches",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"message-batches"
							]
						},
						"description": "This request successfully creates a message batch."
					},
					"response": []
				},
				{
					"name": "201 - Message Batch Created - Free-text NHS App",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correlation identifier is returned\", () => {\r",
									"    pm.response.to.have.header(\"x-correlation-id\");\r",
									"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json",
								"type": "default"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json",
								"type": "default"
							},
							{
								"key": "X-Correlation-Id",
								"value": "{{correlation_id}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"00000000-0000-0000-0000-000000000001\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"personalisation\": {\r\n                            \"body\": \"Please contact your practice to book into our smoking cessation clinic\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"messageReference\": \"990b5b3d-d24b-40f9-83b6-d124597e92e0\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9800100369\",\r\n                            \"dateOfBirth\": \"1983-12-03\"\r\n                        },\r\n                        \"personalisation\": {\r\n                            \"body\": \"Please contact your practice to book into our smoking cessation clinic\"\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/message-batches",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"message-batches"
							]
						},
						"description": "This request successfully creates a message batch using the NHS App free-text global routing plan."
					},
					"response": []
				},
				{
					"name": "201 - Message Batch Created - Free-text Email",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correlation identifier is returned\", () => {\r",
									"    pm.response.to.have.header(\"x-correlation-id\");\r",
									"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "X-Correlation-Id",
								"value": "{{correlation_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"00000000-0000-0000-0000-000000000002\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"personalisation\": {\r\n                            \"email_subject\": \"Smoking Cessation\",\r\n                            \"email_body\": \"Please contact your practice to book into our smoking cessation clinic\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"messageReference\": \"990b5b3d-d24b-40f9-83b6-d124597e92e0\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9800100369\",\r\n                            \"dateOfBirth\": \"1983-12-03\"\r\n                        },\r\n                        \"personalisation\": {\r\n                            \"email_subject\": \"Smoking Cessation\",\r\n                            \"email_body\": \"Please contact your practice to book into our smoking cessation clinic\"\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/message-batches",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"message-batches"
							]
						},
						"description": "This request successfully creates a message batch using the email free-text global routing plan."
					},
					"response": []
				},
				{
					"name": "201 - Message Batch Created - Free-text SMS",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correlation identifier is returned\", () => {\r",
									"    pm.response.to.have.header(\"x-correlation-id\");\r",
									"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "X-Correlation-Id",
								"value": "{{correlation_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"00000000-0000-0000-0000-000000000003\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"personalisation\": {\r\n                            \"sms_body\": \"Please contact your practice to book into our smoking cessation clinic\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"messageReference\": \"990b5b3d-d24b-40f9-83b6-d124597e92e0\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9800100369\",\r\n                            \"dateOfBirth\": \"1983-12-03\"\r\n                        },\r\n                        \"personalisation\": {\r\n                            \"sms_body\": \"Please contact your practice to book into our smoking cessation clinic\"\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/message-batches",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"message-batches"
							]
						},
						"description": "This request successfully creates a message batch using the SMS free-text global routing plan."
					},
					"response": []
				}
			],
			"description": "This folder contains requests that allow you to simulate all of the different responses when sending a batch of messages."
		},
		{
			"name": "Errors",
			"item": [
				{
					"name": "Timeouts & Quotas",
					"item": [
						{
							"name": "408 - Request Timeout",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 408\", () => {\r",
											"    pm.response.to.have.status(408);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "default"
									},
									{
										"key": "Prefer",
										"value": "code=408",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the request timeout error response from the API."
							},
							"response": []
						},
						{
							"name": "429 - Too Many Requests",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 429\", () => {\r",
											"    pm.response.to.have.status(429);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "default"
									},
									{
										"key": "Prefer",
										"value": "code=429",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the too many requests error response from the API."
							},
							"response": []
						},
						{
							"name": "504 - Gateway Timeout",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 504\", () => {\r",
											"    pm.response.to.have.status(504);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "default"
									},
									{
										"key": "Prefer",
										"value": "code=504",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the gateway timeout error response from the API."
							},
							"response": []
						},
						{
							"name": "425 - Retry Too Early",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 425\", () => {\r",
											"    pm.response.to.have.status(425);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "text"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "text"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "text"
									},
									{
										"key": "Prefer",
										"value": "code=425",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the retry too early error response from the API."
							},
							"response": []
						}
					],
					"description": "This collection of requests shows how to trigger timeout and quota errors."
				},
				{
					"name": "Authentication errors",
					"item": [
						{
							"name": "401 - Unauthorized",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 401\", () => {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "default"
									},
									{
										"key": "Prefer",
										"value": "code=401",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the unauthorized error response from the API."
							},
							"response": []
						},
						{
							"name": "403 - Forbidden",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 403\", () => {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "default"
									},
									{
										"key": "Prefer",
										"value": "code=403",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the forbidden error response from the API."
							},
							"response": []
						},
						{
							"name": "403 - Service Ban",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 403\", () => {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Authorization",
										"value": "banned"
									}
								],
								"url": {
									"raw": "{{base_url}}/v1/messages/test-id-123",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"test-id-123"
									]
								},
								"description": "This request simulates the client service ban error response from the API."
							},
							"response": []
						}
					],
					"description": "This collection of requests shows how to trigger authentication and authorization errors."
				},
				{
					"name": "Mime type errors",
					"item": [
						{
							"name": "406 - Not Acceptable",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 406\", () => {\r",
											"    pm.response.to.have.status(406);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "Accept",
										"value": "not/valid",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{base_url}}\",\r\n                \"messageBatchReference\": \"{{messageBatchReference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request asks the server to generate a response that it cannot, triggering a not acceptable error."
							},
							"response": []
						},
						{
							"name": "415 - Unsupported Media",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 415\", () => {\r",
											"    pm.response.to.have.status(415);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "not/valid",
										"type": "default"
									},
									{
										"key": "Accept",
										"value": "application/vnd.api+json",
										"type": "default"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messageBatchReference\": \"{{messageBatchReference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request attempts to send data in an unknown format, triggering an unsupported media error."
							},
							"response": []
						}
					],
					"description": "This collection of requests shows how to trigger mime type errors."
				}
			],
			"description": "This folder contains all requests related to errors that the API can throw on any endpoint."
		},
		{
			"name": "Send Message",
			"item": [
				{
					"name": "Validation Errors",
					"item": [
						{
							"name": "400 - Invalid Value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"type\": \"invalid\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"invalid\",\r\n            \"messageReference\": \"invalid\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"invalid\",\r\n                \"dateOfBirth\": \"invalid\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends several invalid values on properties. Each of these triggers its own invalid value error."
							},
							"response": []
						},
						{
							"name": "400 - Invalid Value - Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends through an invalid JSON body payload, which triggers the invalid value error at the body level."
							},
							"response": []
						},
						{
							"name": "400 - Missing Property",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"b838b13c-f98c-4def-93f0-515d4e4f4ee1\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request misses the `type` and the `messageReference` properties. This triggers the missing property error."
							},
							"response": []
						},
						{
							"name": "400 - Null Value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"type\": null,\r\n        \"attributes\": {\r\n            \"routingPlanId\": null,\r\n            \"messageReference\": null,\r\n            \"recipient\": {\r\n                \"nhsNumber\": null,\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends a null `type,` `routingPlanId,` `messageReference` and `nhsNumber` on the request, triggering the null value error."
							},
							"response": []
						},
						{
							"name": "404 - No Such Routing Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 404\", () => {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"type\": \"Message\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"c999b13c-f98c-4def-93f0-515d4e4f4dd2\",\r\n            \"messageReference\": \"{{message_reference}}\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends an invalid routing plan id. As the system cannot find this routing plan it triggers a 404 error."
							},
							"response": []
						},
						{
							"name": "500 - Duplicate Routing Plan Template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 500\", () => {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"type\": \"Message\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"a3a4e55d-7a21-45a6-9286-8eb595c872a8\",\r\n            \"messageReference\": \"{{message_reference}}\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends a routing plan id that references a duplicate template. This routing plan triggers a 500 error."
							},
							"response": []
						},
						{
							"name": "500 - Missing Routing Plan Template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 500\", () => {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"type\": \"Message\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"c8857ccf-06ec-483f-9b3a-7fc732d9ad48\",\r\n            \"messageReference\": \"{{message_reference}}\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends a routing plan id that references a missing template. This routing plan triggers a 500 error."
							},
							"response": []
						}
					]
				},
				{
					"name": "201 - Message Created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correlation identifier is returned\", () => {\r",
									"    pm.response.to.have.header(\"x-correlation-id\");\r",
									"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "X-Correlation-Id",
								"value": "{{correlation_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"type\": \"Message\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"b838b13c-f98c-4def-93f0-515d4e4f4ee1\",\r\n            \"messageReference\": \"{{message_reference}}\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"messages"
							]
						},
						"description": "This request successfully creates a message."
					},
					"response": []
				},
				{
					"name": "201 - Message Created - Free-text NHS App",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correlation identifier is returned\", () => {\r",
									"    pm.response.to.have.header(\"x-correlation-id\");\r",
									"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "X-Correlation-Id",
								"value": "{{correlation_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"type\": \"Message\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"00000000-0000-0000-0000-000000000001\",\r\n            \"messageReference\": \"{{message_reference}}\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"personalisation\": {\r\n                \"body\": \"Your appointment has been booked for 28/02/2024 at 2:15 PM, please bring your medication with you\"\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"messages"
							]
						},
						"description": "This request successfully creates a message using the NHS App free-text global routing plan."
					},
					"response": []
				},
				{
					"name": "201 - Message Created - Free-text Email",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correlation identifier is returned\", () => {\r",
									"    pm.response.to.have.header(\"x-correlation-id\");\r",
									"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "X-Correlation-Id",
								"value": "{{correlation_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"type\": \"Message\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"00000000-0000-0000-0000-000000000002\",\r\n            \"messageReference\": \"{{message_reference}}\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"personalisation\": {\r\n\t\t\t\t\t\t\t  \"email_subject\": \"Appointment Information\",\r\n                \"email_body\": \"Your appointment has been booked for 28/02/2024 at 2:15 PM, please bring your medication with you\"\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"messages"
							]
						},
						"description": "This request successfully creates a message using the email free-text global routing plan."
					},
					"response": []
				},
				{
					"name": "201 - Message Created - Free-text SMS",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correlation identifier is returned\", () => {\r",
									"    pm.response.to.have.header(\"x-correlation-id\");\r",
									"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "X-Correlation-Id",
								"value": "{{correlation_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"type\": \"Message\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"00000000-0000-0000-0000-000000000003\",\r\n            \"messageReference\": \"{{message_reference}}\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"personalisation\": {\r\n                \"sms_body\": \"Your appointment has been booked for 28/02/2024 at 2:15 PM, please bring your medication with you\"\r\n            }\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"messages"
							]
						},
						"description": "This request successfully creates a message using the SMS free-text global routing plan."
					},
					"response": []
				}
			]
		},
		{
			"name": "Get Message",
			"item": [
				{
					"name": "200 - Get Message",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							}
						],
						"url": {
							"raw": "{{base_url}}/v1/messages/2WL5TWl7F7PondWbZ1vctlEtOZ3",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"messages",
								"2WL5TWl7F7PondWbZ1vctlEtOZ3"
							]
						},
						"description": "This request successfully retrieves a message status."
					},
					"response": [
						{
							"name": "200 - All Channels - SMS Delivered",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL5eYSWGzCHlGmzNxuqVusPxDg",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL5eYSWGzCHlGmzNxuqVusPxDg"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - All Channels - Letter Delivered",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL5f8j4XVxUPgd3OOqXVYvVFIW",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL5f8j4XVxUPgd3OOqXVYvVFIW"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - All Channels - NHS App Delivered",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL5TWl7F7PondWbZ1vctlEtOZ3",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL5TWl7F7PondWbZ1vctlEtOZ3"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - NHS App - Delivered",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL3qFTEFM0qMY8xjRbt1LIKCzM",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL3qFTEFM0qMY8xjRbt1LIKCzM"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - NHS App - Delivered",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL5qbEa7TzSWZXU2IAOCCrLXVL",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL5qbEa7TzSWZXU2IAOCCrLXVL"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - NHS App - Sending",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL44QP7vrKxKKBZdTtUQoB2bWl",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL44QP7vrKxKKBZdTtUQoB2bWl"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - NHS App - Failed reason: NHS number not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL45YuHOLATvC3GspEu0oSioux",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL45YuHOLATvC3GspEu0oSioux"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - NHS App - Failed reason: Contact detail is missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4vHFZzInmaYwq6HRNDqTX8dH",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4vHFZzInmaYwq6HRNDqTX8dH"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - NHS App - Failed reason: NHS number not found",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL5eDefrbW31uw1il84WdF8ndH",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL5eDefrbW31uw1il84WdF8ndH"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Email - Delivered",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL3wwFhpZ6blJNIoh747bDEFNv",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL3wwFhpZ6blJNIoh747bDEFNv"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Email - Sending",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4GEeFVxXG9S57nRlefBwwKxp",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4GEeFVxXG9S57nRlefBwwKxp"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Email - Failed reason: Contact detail is missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4xcWKvz4F32g0htBEl8DINzn",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4xcWKvz4F32g0htBEl8DINzn"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Email - Failed reason: The provider could not deliver the message. This can happen when the recipient’s inbox is full or their anti-spam filter rejects your email. Check your content does not look like spam before you try to send the message again.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4W9RgbuLLByXdR77H8vjKSDd",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4W9RgbuLLByXdR77H8vjKSDd"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - SMS - Delivered",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL3ydEEk37IzREoWRhuAdolFCE",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL3ydEEk37IzREoWRhuAdolFCE"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - SMS - Sending",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4JXrfauCaQnSFbAujoImSKwo",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4JXrfauCaQnSFbAujoImSKwo"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - SMS - Failed reason: Contact detail is missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL50w41YaZXcyFCNT346LY8rlz",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL50w41YaZXcyFCNT346LY8rlz"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - SMS - Failed reason: Contact detail is missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2bBBpsiMl2rnQt99qm6JLZ6w1vq",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2bBBpsiMl2rnQt99qm6JLZ6w1vq"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Letter - Delivered",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL3zxCY9e5vm2VP1ZfYMb53WPF",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL3zxCY9e5vm2VP1ZfYMb53WPF"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Letter - Sending",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4LuyNMtoGAsJQIpTxZLl8e3e",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4LuyNMtoGAsJQIpTxZLl8e3e"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Letter - Failed reason: Contact detail is missing",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL54x0XQjCbWeE5lN0DKQZcokU",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL54x0XQjCbWeE5lN0DKQZcokU"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Letter - Failed reason: We had an unexpected error while sending the letter to our printing provider.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4MOuSeCTODDAScFG7KIq9a5r",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4MOuSeCTODDAScFG7KIq9a5r"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Failed reason: Patient record invalidated.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4cPfBRuPKa44JxhyXYf2kr1E",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4cPfBRuPKa44JxhyXYf2kr1E"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Failed reason: Patient is formally dead",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4ibGoigirgbH4yQwqbPaJXyQ",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4ibGoigirgbH4yQwqbPaJXyQ"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Failed reason: Patient is informally dead",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4khXn32dOOj4bB4bi8Tkllrq",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4khXn32dOOj4bB4bi8Tkllrq"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Failed reason: Patient has exit code",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4mvx6eBva8dcIK60VEGIfcgZ",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4mvx6eBva8dcIK60VEGIfcgZ"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Failed reason: Patient does not exist in PDS",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4QcKGjNHvHFQeKgYbapZJGHK",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4QcKGjNHvHFQeKgYbapZJGHK"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Failed reason: Name response is invalid: Contact detail is malformed",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4pcpmKxYYblm3PSKVEqcmEPX",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4pcpmKxYYblm3PSKVEqcmEPX"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Failed reason: The provider could not deliver the message. This can happen when the recipient’s phone is off, has no signal, or their text message inbox is full. You can try to send the message again. You’ll still be charged for text messages to pho",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/v1/messages/2WL4JtCiOe7l2TT4szwPjNJah3z",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2WL4JtCiOe7l2TT4szwPjNJah3z"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						},
						{
							"name": "200 - Parallel send - NHS App Failed and SMS Delivered",
							"originalRequest": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									}
								],
								"url": {
									"raw": "{{base_url}}/v1/messages/2n7C5wdJ9JSOSeCJTyd50GvtZeR",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages",
										"2n7C5wdJ9JSOSeCJTyd50GvtZeR"
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "404 - Not Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/v1/messages/does-not-exist",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"messages",
								"does-not-exist"
							]
						},
						"description": "This request attempts to retrieve a message that does not exist"
					},
					"response": []
				}
			]
		},
		{
			"name": "NHS App Account",
			"item": [
				{
					"name": "200 - NHS App Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/channels/nhsapp/accounts?ods-organisation-code=X26",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"channels",
								"nhsapp",
								"accounts"
							],
							"query": [
								{
									"key": "ods-organisation-code",
									"value": "X26"
								}
							]
						},
						"description": "The request succesfully retreives NHS numbers registered for notifications in the NHS app against an ODS code"
					},
					"response": [
						{
							"name": "200 - NHS App Account - T0001 returns the same data as X26",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{base_url}}/channels/nhsapp/accounts?ods-organisation-code=T00001",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"channels",
										"nhsapp",
										"accounts"
									],
									"query": [
										{
											"key": "ods-organisation-code",
											"value": "T00001"
										}
									]
								}
							},
							"_postman_previewlanguage": null,
							"header": null,
							"cookie": [],
							"body": null
						}
					]
				},
				{
					"name": "200 - NHS App Account - Multipage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", () => {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/channels/nhsapp/accounts?ods-organisation-code=T00001&page=2",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"channels",
								"nhsapp",
								"accounts"
							],
							"query": [
								{
									"key": "ods-organisation-code",
									"value": "T00001"
								},
								{
									"key": "page",
									"value": "2"
								}
							]
						},
						"description": "The request successfully retrieves NHS numbers registered for notifications in the NHS App against an ODS code, adding the \"page\" parameter allows you to access the full paginated response"
					},
					"response": []
				},
				{
					"name": "400 - NHS App Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", () => {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/channels/nhsapp/accounts?ods-organisation-code=",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"channels",
								"nhsapp",
								"accounts"
							],
							"query": [
								{
									"key": "ods-organisation-code",
									"value": ""
								}
							]
						},
						"description": "The request returns a 400 invalid code when an invalid ODS code is provided"
					},
					"response": []
				},
				{
					"name": "404 - NHS App Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", () => {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/channels/nhsapp/accounts?ods-organisation-code=x26&page=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"channels",
								"nhsapp",
								"accounts"
							],
							"query": [
								{
									"key": "ods-organisation-code",
									"value": "x26"
								},
								{
									"key": "page",
									"value": "10"
								}
							]
						},
						"description": "The request returns a 404 not found code when a user attempts to access data that does not exist"
					},
					"response": []
				},
				{
					"name": "429 - NHS App Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 429\", () => {",
									"    pm.response.to.have.status(429);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/channels/nhsapp/accounts?ods-organisation-code=T00429",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"channels",
								"nhsapp",
								"accounts"
							],
							"query": [
								{
									"key": "ods-organisation-code",
									"value": "T00429"
								}
							]
						},
						"description": "The request returns a simulated 429 error for too many requests"
					},
					"response": []
				},
				{
					"name": "502 - NHS App Account",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 502\", () => {",
									"    pm.response.to.have.status(502);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/channels/nhsapp/accounts?ods-organisation-code=T00502",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"channels",
								"nhsapp",
								"accounts"
							],
							"query": [
								{
									"key": "ods-organisation-code",
									"value": "T00502"
								}
							]
						},
						"description": "The request returns a 502 simulation for bad gateway"
					},
					"response": []
				}
			]
		},
		{
			"name": "200 - CORS",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correlation identifier is returned\", () => {\r",
							"    pm.response.to.have.header(\"x-correlation-id\");\r",
							"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Header Contains Access-Control-Request-Method Provided\", () => {\r",
							"    pm.expect(pm.response.headers.get('Access-Control-Request-Method')).to.eql(pm.request.headers.get('Access-Control-Request-Method'));\r",
							"});\r",
							"\r",
							"pm.test(\"Response Header Contains Origin Provided\", () => {\r",
							"    pm.expect(pm.response.headers.get('Origin')).to.eql(\"https://my.website\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response Header Contains Origin Provided\", () => {\r",
							"    pm.expect(pm.response.headers.get('Origin')).to.eql(\"https://my.website\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.api+json",
						"type": "default"
					},
					{
						"key": "Origin",
						"value": "https://my.website",
						"type": "default"
					},
					{
						"key": "Access-Control-Request-Method",
						"value": "POST",
						"type": "default"
					},
					{
						"key": "X-Correlation-Id",
						"value": "{{correlation_id}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				},
				"description": "A request showing the CORS header responses."
			},
			"response": []
		},
		{
			"name": "404 - Not Found - Invalid URL",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correlation identifier is returned\", () => {\r",
							"    pm.response.to.have.header(\"x-correlation-id\");\r",
							"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 404\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/vnd.api+json",
						"type": "default"
					},
					{
						"key": "X-Correlation-Id",
						"value": "{{correlation_id}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/does/not/exist",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"does",
						"not",
						"exist"
					]
				},
				"description": "This request triggers a 404 not found error."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"var uuid = require('uuid');",
					"",
					"//assign the message batch reference",
					"pm.variables.set(\"message_batch_reference\", uuid.v4());",
					"",
					"//assign the message batch reference",
					"pm.variables.set(\"message_reference\", uuid.v4());",
					"",
					"//assign the correlation id",
					"pm.variables.set(\"correlation_id\", uuid.v4());"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://sandbox.api.service.nhs.uk/comms",
			"type": "string"
		},
		{
			"key": "routing_plan_id",
			"value": "b838b13c-f98c-4def-93f0-515d4e4f4ee1",
			"type": "string"
		}
	]
}