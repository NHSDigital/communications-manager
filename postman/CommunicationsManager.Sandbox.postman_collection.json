{
	"info": {
		"_postman_id": "83c0eed4-e6e6-445d-8db3-9ceebd72ca1c",
		"name": "Communications Manager - Sandbox",
		"description": "This collection allows you to run a number of pre-generated requests to simulate responses from our sandbox environment.\n\nThis environment requires no authentication and no upfront setup for you to use.\n\nFor more information on the Communications Manager API please refer to [the documentation](https://digital.nhs.uk/developer/api-catalogue/communications-manager).",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33393292"
	},
	"item": [
		{
			"name": "Send Message Batches",
			"item": [
				{
					"name": "Validation Errors",
					"item": [
						{
							"name": "400 -  Too Few Items",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "text",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This responses sends 0 message objects in the messages collection triggering the too few items error."
							},
							"response": []
						},
						{
							"name": "400 - Duplicate Items",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "text",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"originator\": {\r\n                            \"odsCode\": \"X123\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    },\r\n                                        {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"originator\": {\r\n                            \"odsCode\": \"X123\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request sends two message objects with the same `messageReference` value. This triggers a duplicate items error."
							},
							"response": []
						},
						{
							"name": "400 - Null Value",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "text",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": null,\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": null,\r\n                        \"originator\": {\r\n                            \"odsCode\": \"X123\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request sends a null `type` and a null `recipient` on the request, triggering the null value error."
							},
							"response": []
						},
						{
							"name": "400 - Invalid Value",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "text",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"invalid\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"invalid\",\r\n                \"messageBatchReference\": \"invalid\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"invalid\",\r\n                        \"recipient\": \"invalid\",\r\n                        \"originator\": \"invalid\",\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request sends several invalid values on properties. Each of these triggers its own invalid value error."
							},
							"response": []
						},
						{
							"name": "400 - Missing Property",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "default",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"originator\": {\r\n                            \"odsCode\": \"X123\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request misses the `type` and the `messageBatchReference` properties. This triggers the missing property error."
							},
							"response": []
						},
						{
							"name": "400 - Invalid Value - Body",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "default",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "}{@SA}{}SAD"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request sends through an invalid JSON body payload, which triggers the invalid value error at the body level."
							},
							"response": []
						},
						{
							"name": "404 - Invalid Routing Plan Id",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 404\", () => {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "text",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"c118b13c-f98c-4def-93f0-515d4e4f4ee1\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"originator\": {\r\n                            \"odsCode\": \"X123\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/v1/message-batches",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"message-batches"
									]
								},
								"description": "This request sends an invalid routing plan id. As the system cannot find this routing plan it triggers a 404 error."
							},
							"response": []
						}
					],
					"description": "This folder contains example requests that trigger validation errors when attempting to send a batch of messages."
				},
				{
					"name": "201 - Message Batch Created",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correlation identifier is returned\", () => {\r",
									"    pm.response.to.have.header(\"x-correlation-id\");\r",
									"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"accept": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "default",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Accept",
								"type": "default",
								"value": "application/vnd.api+json"
							},
							{
								"key": "X-Correlation-Id",
								"type": "text",
								"value": "{{correlation_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messageBatchReference\": \"{{message_batch_reference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"originator\": {\r\n                            \"odsCode\": \"X123\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/v1/message-batches",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"message-batches"
							]
						},
						"description": "This request successfully creates a message batch."
					},
					"response": []
				}
			],
			"description": "This folder contains requests that allow you to simulate all of the different responses when sending a batch of messages."
		},
		{
			"name": "Errors",
			"item": [
				{
					"name": "Timeouts & Quotas",
					"item": [
						{
							"name": "408 - Request Timeout",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 408\", () => {\r",
											"    pm.response.to.have.status(408);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "default",
										"value": "{{correlation_id}}"
									},
									{
										"key": "Prefer",
										"type": "default",
										"value": "code=408"
									}
								],
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the request timeout error response from the API."
							},
							"response": []
						},
						{
							"name": "429 - Too Many Requests",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 429\", () => {\r",
											"    pm.response.to.have.status(429);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "default",
										"value": "{{correlation_id}}"
									},
									{
										"key": "Prefer",
										"type": "default",
										"value": "code=429"
									}
								],
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the too many requests error response from the API."
							},
							"response": []
						},
						{
							"name": "504 - Gateway Timeout",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 504\", () => {\r",
											"    pm.response.to.have.status(504);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {
									"accept": true
								}
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "default",
										"value": "{{correlation_id}}"
									},
									{
										"key": "Prefer",
										"type": "default",
										"value": "code=504"
									}
								],
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the gateway timeout error response from the API."
							},
							"response": []
						},
						{
							"name": "425 - Retry Too Early",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 425\", () => {\r",
											"    pm.response.to.have.status(425);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "text",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "text",
										"value": "{{correlation_id}}"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "code=425"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the retry too early error response from the API."
							},
							"response": []
						}
					],
					"description": "This collection of requests shows how to trigger timeout and quota errors."
				},
				{
					"name": "Authentication errors",
					"item": [
						{
							"name": "401 - Unauthorized",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 401\", () => {\r",
											"    pm.response.to.have.status(401);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "default",
										"value": "{{correlation_id}}"
									},
									{
										"key": "Prefer",
										"type": "text",
										"value": "code=401"
									}
								],
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the unauthorized error response from the API."
							},
							"response": []
						},
						{
							"name": "403 - Forbidden",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 403\", () => {\r",
											"    pm.response.to.have.status(403);\r",
											"});\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "default",
										"value": "{{correlation_id}}"
									},
									{
										"key": "Prefer",
										"type": "default",
										"value": "code=403"
									}
								],
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request simulates the forbidden error response from the API."
							},
							"response": []
						}
					],
					"description": "This collection of requests shows how to trigger authentication and authorization errors."
				},
				{
					"name": "Mime type errors",
					"item": [
						{
							"name": "406 - Not Acceptable",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 406\", () => {\r",
											"    pm.response.to.have.status(406);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Content-Type",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Accept",
										"type": "default",
										"value": "not/valid"
									},
									{
										"key": "X-Correlation-Id",
										"type": "text",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{base_url}}\",\r\n                \"messageBatchReference\": \"{{messageBatchReference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"originator\": {\r\n                            \"odsCode\": \"X123\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}"
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request asks the server to generate a response that it cannot, triggering a not acceptable error."
							},
							"response": []
						},
						{
							"name": "415 - Unsupported Media",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 415\", () => {\r",
											"    pm.response.to.have.status(415);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"type": "default",
										"value": "not/valid"
									},
									{
										"key": "Accept",
										"type": "default",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"type": "text",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n        \"data\": {\r\n            \"type\": \"MessageBatch\",\r\n            \"attributes\": {\r\n                \"routingPlanId\": \"{{routing_plan_id}}\",\r\n                \"messageBatchReference\": \"{{messageBatchReference}}\",\r\n                \"messages\": [\r\n                    {\r\n                        \"messageReference\": \"703b8008-545d-4a04-bb90-1f2946ce1575\",\r\n                        \"recipient\": {\r\n                            \"nhsNumber\": \"9990548609\",\r\n                            \"dateOfBirth\": \"1932-01-06\"\r\n                        },\r\n                        \"originator\": {\r\n                            \"odsCode\": \"X123\"\r\n                        },\r\n                        \"personalisation\": {}\r\n                    }\r\n                ]\r\n            }\r\n        }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}",
									"host": [
										"{{base_url}}"
									]
								},
								"description": "This request attempts to send data in an unknown format, triggering an unsupported media error."
							},
							"response": []
						}
					],
					"description": "This collection of requests shows how to trigger mime type errors."
				}
			],
			"description": "This folder contains all requests related to errors that the API can throw on any endpoint."
		},
		{
			"name": "Send Message",
			"item": [
				{
					"name": "Validation Errors",
					"item": [
						{
							"name": "400 - Invalid Value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"type\": \"invalid\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"invalid\",\r\n            \"messageReference\": \"invalid\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"invalid\",\r\n                \"dateOfBirth\": \"invalid\"\r\n            },\r\n            \"originator\": \"invalid\",\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends several invalid values on properties. Each of these triggers its own invalid value error."
							},
							"response": []
						},
						{
							"name": "400 - Invalid Value - Body",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends through an invalid JSON body payload, which triggers the invalid value error at the body level."
							},
							"response": []
						},
						{
							"name": "400 - Missing Property",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"b838b13c-f98c-4def-93f0-515d4e4f4ee1\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"originator\": {\r\n                \"odsCode\": \"X123\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request misses the `type` and the `messageReference` properties. This triggers the missing property error."
							},
							"response": []
						},
						{
							"name": "400 - Null Value",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 400\", () => {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"type\": null,\r\n        \"attributes\": {\r\n            \"routingPlanId\": null,\r\n            \"messageReference\": null,\r\n            \"recipient\": {\r\n                \"nhsNumber\": null,\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"originator\": {\r\n                \"odsCode\": \"X123\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends a null `type,` `routingPlanId,` `messageReference` and `nhsNumber` on the request, triggering the null value error."
							},
							"response": []
						},
						{
							"name": "404 - No Such Routing Plan",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 404\", () => {\r",
											"    pm.response.to.have.status(404);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"type\": \"Message\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"c999b13c-f98c-4def-93f0-515d4e4f4dd2\",\r\n            \"messageReference\": \"{{message_reference}}\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"originator\": {\r\n                \"odsCode\": \"X123\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends an invalid routing plan id. As the system cannot find this routing plan it triggers a 404 error."
							},
							"response": []
						},
						{
							"name": "500 - Duplicate Routing Plan Template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 500\", () => {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"type\": \"Message\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"a3a4e55d-7a21-45a6-9286-8eb595c872a8\",\r\n            \"messageReference\": \"{{message_reference}}\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"originator\": {\r\n                \"odsCode\": \"X123\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends a routing plan id that references a duplicate template. This routing plan triggers a 500 error."
							},
							"response": []
						},
						{
							"name": "500 - Missing Routing Plan Template",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Correlation identifier is returned\", () => {\r",
											"    pm.response.to.have.header(\"x-correlation-id\");\r",
											"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 500\", () => {\r",
											"    pm.response.to.have.status(500);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.api+json"
									},
									{
										"key": "Content-Type",
										"value": "application/vnd.api+json"
									},
									{
										"key": "X-Correlation-Id",
										"value": "{{correlation_id}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"data\": {\r\n        \"type\": \"Message\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"c8857ccf-06ec-483f-9b3a-7fc732d9ad48\",\r\n            \"messageReference\": \"{{message_reference}}\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"originator\": {\r\n                \"odsCode\": \"X123\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/v1/messages",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"v1",
										"messages"
									]
								},
								"description": "This request sends a routing plan id that references a missing template. This routing plan triggers a 500 error."
							},
							"response": []
						}
					]
				},
				{
					"name": "201 - Message Created",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Correlation identifier is returned\", () => {\r",
									"    pm.response.to.have.header(\"x-correlation-id\");\r",
									"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/vnd.api+json"
							},
							{
								"key": "Content-Type",
								"value": "application/vnd.api+json"
							},
							{
								"key": "X-Correlation-Id",
								"value": "{{correlation_id}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"data\": {\r\n        \"type\": \"Message\",\r\n        \"attributes\": {\r\n            \"routingPlanId\": \"b838b13c-f98c-4def-93f0-515d4e4f4ee1\",\r\n            \"messageReference\": \"{{message_reference}}\",\r\n            \"recipient\": {\r\n                \"nhsNumber\": \"9990548609\",\r\n                \"dateOfBirth\": \"2023-01-01\"\r\n            },\r\n            \"originator\": {\r\n                \"odsCode\": \"X123\"\r\n            },\r\n            \"personalisation\": {}\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/v1/messages",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"v1",
								"messages"
							]
						},
						"description": "This request successfully creates a message."
					},
					"response": []
				}
			]
		},
		{
			"name": "200 - CORS",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correlation identifier is returned\", () => {\r",
							"    pm.response.to.have.header(\"x-correlation-id\");\r",
							"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", () => {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Response Header Contains Access-Control-Request-Method Provided\", () => {\r",
							"    pm.expect(pm.response.headers.get('Access-Control-Request-Method')).to.eql(pm.request.headers.get('Access-Control-Request-Method'));\r",
							"});\r",
							"\r",
							"pm.test(\"Response Header Contains Origin Provided\", () => {\r",
							"    pm.expect(pm.response.headers.get('Origin')).to.eql(\"https://my.website\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response Header Contains Origin Provided\", () => {\r",
							"    pm.expect(pm.response.headers.get('Origin')).to.eql(\"https://my.website\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "OPTIONS",
				"header": [
					{
						"key": "Accept",
						"type": "default",
						"value": "application/vnd.api+json"
					},
					{
						"key": "Origin",
						"type": "default",
						"value": "https://my.website"
					},
					{
						"key": "Access-Control-Request-Method",
						"type": "default",
						"value": "POST"
					},
					{
						"key": "X-Correlation-Id",
						"type": "text",
						"value": "{{correlation_id}}"
					}
				],
				"url": {
					"raw": "{{base_url}}",
					"host": [
						"{{base_url}}"
					]
				},
				"description": "A request showing the CORS header responses."
			},
			"response": []
		},
		{
			"name": "404 - Not Found - Invalid URL",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Correlation identifier is returned\", () => {\r",
							"    pm.response.to.have.header(\"x-correlation-id\");\r",
							"    pm.response.to.be.header(\"x-correlation-id\", pm.variables.get(\"correlation_id\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 404\", () => {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"type": "default",
						"value": "application/vnd.api+json"
					},
					{
						"key": "X-Correlation-Id",
						"type": "text",
						"value": "{{correlation_id}}"
					}
				],
				"url": {
					"raw": "{{base_url}}/does/not/exist",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"does",
						"not",
						"exist"
					]
				},
				"description": "This request triggers a 404 not found error."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"exec": [
					"var uuid = require('uuid');",
					"",
					"//assign the message batch reference",
					"pm.variables.set(\"message_batch_reference\", uuid.v4());",
					"",
					"//assign the message batch reference",
					"pm.variables.set(\"message_reference\", uuid.v4());",
					"",
					"//assign the correlation id",
					"pm.variables.set(\"correlation_id\", uuid.v4());"
				],
				"type": "text/javascript"
			}
		},
		{
			"listen": "test",
			"script": {
				"exec": [
					""
				],
				"type": "text/javascript"
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "https://sandbox.api.service.nhs.uk/comms",
			"type": "string"
		},
		{
			"key": "routing_plan_id",
			"value": "b838b13c-f98c-4def-93f0-515d4e4f4ee1",
			"type": "string"
		}
	]
}