<FaultRule name="combined_backend_fault_handler">
    <Step>
        <Name>JavaScript.SetResponseContentType</Name>
    </Step>
    <Step>
        <Name>AssignMessage.SetCorrelationId</Name>
        <Condition>request.headers.x-correlation-id != null</Condition>
    </Step>
    <Step>
        <Name>AssignMessage.AddCorsResponse</Name>
        <Condition>(request.header.origin != null) and (request.verb != "OPTIONS")</Condition>
    </Step>
    {% if ENVIRONMENT_TYPE != 'sandbox' %}
        <Step>
            <Name>RaiseFault.401Unauthorized</Name>
            <Condition>
                oauthV2.OauthV2.VerifyAccessToken.failed = true or fault.name = "access_token_expired" or fault.name = "invalid_access_token" or fault.name = "InvalidAccessToken" or fault.name = "access_token_not_approved" or fault.name = "apiresource_doesnot_exist" or fault.name = "InvalidAPICallAsNo" or fault.name = "ApiProductMatchFound"
            </Condition>
        </Step>
        <Step>
            <Name>RaiseFault.403Forbidden</Name>
            <Condition>response.status.code = 403</Condition>
        </Step>
    {% endif %}
    <Step>
        <Name>RaiseFault.404InvalidRoutingPlan</Name>
        <Condition>
          response.status.code = 404 and response.content Like "*Routing Config does not exist for clientId *" and response.content Like "* and sendingGroupId *"
      </Condition>
    </Step>
    <Step>
        <Name>RaiseFault.404NotFound</Name>
        <Condition>response.status.code = 404</Condition>
    </Step>
    <Step>
        <Name>RaiseFault.400BackendException.InvalidRoutingConfig</Name>
        <Condition>response.status.code = 400 and response.content Like "*Invalid Routing Config*"</Condition>
      </Step>
    <Step>
        <Name>RaiseFault.400BackendException.DuplicateRequestItemRefIds</Name>
        <Condition>response.status.code = 400 and response.content Like "*Duplicate requestItemRefIds*"</Condition>
    </Step>
    <Step>
      <Name>RaiseFault.400BackendException.MissingSendingGroupId</Name>
      <Condition>response.status.code = 400 and response.content Like "*Missing sendingGroupId*"</Condition>
    </Step>
    <Step>
        <Name>RaiseFault.400BackendException.MissingRequestRefId</Name>
        <Condition>response.status.code = 400 and response.content Like "*Missing requestRefId*"</Condition>
    </Step>
    <Step>
        <Name>RaiseFault.400BackendException.MissingDataArray</Name>
        <Condition>response.status.code = 400 and response.content Like "*Missing data array*"</Condition>
    </Step>
    <Step>
        <Name>RaiseFault.429TooManyRequests</Name>
        <Condition>fault.name = "SpikeArrestViolation"</Condition>
    </Step>
    <Step>
        <Name>JavaScript.500DuplicateTemplates.ExtractDuplicates</Name>
        <Condition>
            response.status.code = 400 and response.content Like "*Duplicate templates found: *"
        </Condition>
        </Step>
    <Step>
        <Name>RaiseFault.500DuplicateTemplates</Name>
        <Condition>
            response.status.code = 400 and response.content Like "*Duplicate templates found: *"
        </Condition>
    </Step>
    <Step>
        <Name>RaiseFault.500MissingTemplates</Name>
        <Condition>
            response.status.code = 400 and response.content Like "*Templates required in *" and response.content Like "* routing config not found*"
        </Condition>
    </Step>
    <Step>
        <Name>RaiseFault.500Generic</Name>
        <Condition>
            response.status.code = 500 or fault.name = "ScriptExecutionFailed"
        </Condition>
    </Step>
    <Step>
        <Name>RaiseFault.503ServiceUnavailable</Name>
        <Condition>
          fault.name = "ProxyTunnelCreationFailed" or fault.name = "NoResolvedHost" or fault.name = "SslHandshakeFailed" or fault.name = "ServiceUnavailable" or fault.name = "NoActiveTargets" or response.status.code = 503
      </Condition>
    </Step>
    <Step>
        <Name>RaiseFault.504GatewayTimeout</Name>
        <Condition>fault.name = "GatewayTimeout" or response.status.code = 504</Condition>
    </Step>
    <Step>
        <Name>RaiseFault.408RequestTimeout</Name>
        <Condition>fault.name = "RequestTimeout" or response.status.code = 408</Condition>
    </Step>
</FaultRule>