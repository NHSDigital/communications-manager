<TargetEndpoint name="communications-manager-target">
  <PreFlow>
    <Request>
      <Step>
        <Name>OauthV2.VerifyAccessTokenAppLevel3OrCis2Aal3</Name>
      </Step>
      <Step>
        <Name>RaiseFault.404NotFound</Name>
        <Condition>
          (proxy.pathsuffix != "/v1/message-batches") or (proxy.pathsuffix == "/v1/message-batches" and request.verb != "POST")
        </Condition>
      </Step>
      <Step>
        <Name>JavaScript.MessageBatches.Create.Validate</Name>
        <Condition>
          (proxy.pathsuffix MatchesPath "/v1/message-batches") and (request.verb = "POST")
        </Condition>
      </Step>
      <Step>
        <Name>FlowCallout.ApplyRateLimiting</Name>
      </Step>
    </Request>
  </PreFlow>
  <Flows>
    <Flow name="CreateMessageBatchEndpoint">
      <Description>Handle create message batch</Description>
      <Request>
        <Step>
          <Name>JavaScript.MessageBatches.Create.Request</Name>
        </Step>
        <Step>
          <Name>AssignMessage.MessageBatches.Create.Request</Name>
        </Step>
      </Request>
      <Response>
          <Step>
            <Name>ExtractVariables.MessageBatches.Create.Response</Name>
          </Step>
          <Step>
            <Name>AssignMessage.MessageBatches.Create.Response</Name>
          </Step>
      </Response>
      <Condition>
        (proxy.pathsuffix MatchesPath "/v1/message-batches") and (request.verb = "POST")
      </Condition>
    </Flow>
  </Flows>
  <PostFlow name="PostFlow">
    <Response>
      <Step>
        <Name>JavaScript.SetResponseContentType</Name>
      </Step>
      <Step>
        <Name>AssignMessage.AddCorsResponse</Name>
        <Condition>(request.header.origin != null) and (request.verb != "OPTIONS")</Condition>
      </Step>
    </Response>
  </PostFlow>
  <FaultRules>
    <FaultRule name="combined_backend_fault_handler">
      <Step>
        <Name>JavaScript.SetResponseContentType</Name>
      </Step>
      <Step>
        <Name>AssignMessage.AddCorsResponse</Name>
        <Condition>(request.header.origin != null) and (request.verb != "OPTIONS")</Condition>
      </Step>
      <Step>
        <Name>RaiseFault.401Unauthorized</Name>
        <Condition>
          oauthV2.OauthV2.VerifyAccessToken.failed = true or fault.name = "access_token_expired" or fault.name = "invalid_access_token" or fault.name = "InvalidAccessToken" or fault.name = "access_token_not_approved" or fault.name = "apiresource_doesnot_exist" or fault.name = "InvalidAPICallAsNo" or fault.name = "ApiProductMatchFound"
        </Condition>
      </Step>
      <Step>
        <Name>RaiseFault.403Forbidden</Name>
        <Condition>
          fault.name = "InvalidAPICallAsNoApiProductMatchFound" or fault.name = "InsufficientScope"
        </Condition>
      </Step>
      <Step>
        <Name>RaiseFault.401Unauthorized</Name>
        <Condition>
          response.status.code = 401
        </Condition>
      </Step>
      <Step>
        <Name>RaiseFault.403Forbidden</Name>
        <Condition>
          response.status.code = 403
        </Condition>
      </Step>
      <Step>
        <Name>RaiseFault.404NotFound</Name>
        <Condition>
          response.status.code = 404
        </Condition>
      </Step>
      <Step>
        <Name>RaiseFault.400BadRequest</Name>
        <Condition>errors != null</Condition>
      </Step>
    </FaultRule>
  </FaultRules>
  <!--
    To point to a named target server as this is how it SHOULD be implemented:
    For example:
    <HTTPTargetConnection>
      <SSLInfo>
        <Enabled>true</Enabled>
      </SSLInfo>
      <LoadBalancer>
        <Server name="communications-manager" />
      </LoadBalancer>
    </HTTPTargetConnection>
  -->
  <HTTPTargetConnection>
    <URL>https://comms-apim.de-apim.communications.national.nhs.uk</URL>
  </HTTPTargetConnection>
</TargetEndpoint>
