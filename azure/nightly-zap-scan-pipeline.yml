name: "$(SourceBranchName)+$(BuildID)"

trigger: none
pr: none

resources:
  repositories:
    - repository: common
      type: github
      name: NHSDigital/api-management-utils
      ref: refs/heads/edge
      endpoint: NHSDigital (63)

schedules:
  - cron: 0 3 * * *
    displayName: 3am daily
    branches:
      include: ['release']
    always: true

pool:
  name: 'AWS-ECS'

variables:
  - template: project.yml
  - name: SERVICE_ARTIFACT_NAME
    value: ''

steps:
  - template: "azure/components/aws-assume-role.yml@common"
    parameters:
      role: "auto-ops"
      profile: "apm_ptl"
  - template: "azure/components/get-aws-secrets-and-ssm-params.yml@common"
    parameters:
      secret_file_ids:
      - ptl/api-deployment/communications-manager/INTEGRATION_PRIVATE_KEY
      - ptl/azure-devops/communications-manager/PRODUCTION_PRIVATE_KEY
      secret_ids:
      - ptl/api-deployment/communications-manager/INTEGRATION_API_KEY
      - ptl/azure-devops/communications-manager/PRODUCTION_API_KEY
  - template: ./templates/teams-alert-setup.yml
    parameters:
      webhook_uri: 'ALERTS_DEV_API_WEBHOOK_URI'
  - bash: |
      export INTEGRATION_PRIVATE_KEY="$(Pipeline.Workspace)/secrets/$(INTEGRATION_PRIVATE_KEY)"
      export INTEGRATION_API_KEY="$(INTEGRATION_API_KEY)"
      export PRODUCTION_PRIVATE_KEY="$(Pipeline.Workspace)/secrets/$(PRODUCTION_PRIVATE_KEY)"
      export PRODUCTION_API_KEY="$(PRODUCTION_API_KEY)"
      make install-python && make zap-security-scan    
    displayName: Run OWASP zap scan
  - task: PublishTestResults@2
    displayName: 'Publish OWASP zap results'
    condition: always()
    inputs:
      testResultsFiles: 'zap-report.xml'
      testResultsFormat: NUnit
      failTaskOnFailedTests: true
  - template: ./templates/teams-alert.yml
    parameters:
      title: 'Zap Security Scan'
      webhook_uri: 'ALERTS_DEV_API_WEBHOOK_URI'